diff -ur sources/deeptree/config-overrides.js sources/deeptree-useReduxState/config-overrides.js
--- sources/deeptree/config-overrides.js	2019-02-20 06:30:32.000000000 +0900
+++ sources/deeptree-useReduxState/config-overrides.js	2019-04-01 23:36:28.000000000 +0900
@@ -7,10 +7,9 @@
             "react" : "React",
             "redux" : "Redux",
             "react-dom" : "ReactDOM",
-            "react-redux" : "ReactRedux",
         }
     }
 
 
     return config;
-}
\ No newline at end of file
+}
diff -ur sources/deeptree/package.json sources/deeptree-useReduxState/package.json
--- sources/deeptree/package.json	2019-02-20 06:30:32.000000000 +0900
+++ sources/deeptree-useReduxState/package.json	2019-04-01 23:36:28.000000000 +0900
@@ -7,7 +7,7 @@
     "fps-emit": "file:../../fps-emit",
     "react": "^16.6.0",
     "react-dom": "^16.6.0",
-    "react-redux": "^5.1.0",
+    "reactive-react-redux": "^2.0.1",
     "react-scripts": "2.0.3",
     "redux": "^4.0.0",
     "redux-starter-kit": "^0.4.3",
diff -ur sources/deeptree/public/index.html sources/deeptree-useReduxState/public/index.html
--- sources/deeptree/public/index.html	2019-02-20 06:30:32.000000000 +0900
+++ sources/deeptree-useReduxState/public/index.html	2019-04-01 23:28:05.000000000 +0900
@@ -44,6 +44,5 @@
     <script type="text/javascript" src="redux.min.js"></script>
     <script type="text/javascript" src="react.production.min.js"></script>
     <script type="text/javascript" src="react-dom.production.min.js"></script>
-    <script type="text/javascript" src="react-redux.min.js"></script>
   </body>
 </html>
diff -ur sources/deeptree/src/App.js sources/deeptree-useReduxState/src/App.js
--- sources/deeptree/src/App.js	2019-03-03 12:27:19.000000000 +0900
+++ sources/deeptree-useReduxState/src/App.js	2019-04-01 23:36:28.000000000 +0900
@@ -1,5 +1,5 @@
 import React from "react";
-import { connect } from "react-redux";
+import { useReduxDispatch, useReduxState } from "reactive-react-redux";
 
 import Slice from "./Slice";
 import * as c from "./constants";
@@ -16,31 +16,27 @@
   return { slices };
 };
 
-const mapDispatch = { incrementRandomCounter };
-
-class App extends React.Component {
-  render() {
-    return (
-      <div>
-        <button onClick={this.props.incrementRandomCounter}>
-          Update Random Counter
-        </button>
-        <div className="row">
-          {this.props.slices.map((slice, idx) => {
-            return (
-              <div style={{ display: "inline-block", minWidth: 70 }} key={idx}>
-                <Slice idx={slice} remainingDepth={c.TREE_DEPTH} />
-              </div>
-            );
-          })}
-        </div>
+const App = () => {
+  const dispatch = useReduxDispatch();
+  const state = useReduxState();
+  const { slices } = mapState(state);
+  return (
+    <div>
+      <button onClick={() => dispatch(incrementRandomCounter())}>
+        Update Random Counter
+      </button>
+      <div className="row">
+        {slices.map((slice, idx) => {
+          return (
+            <div style={{ display: "inline-block", minWidth: 70 }} key={idx}>
+              <Slice idx={slice} remainingDepth={c.TREE_DEPTH} />
+            </div>
+          );
+        })}
       </div>
-    );
-  }
-}
+    </div>
+  );
+};
 App.displayName = "App";
 
-export default connect(
-  mapState,
-  mapDispatch
-)(App);
+export default App;
diff -ur sources/deeptree/src/Slice.jsx sources/deeptree-useReduxState/src/Slice.jsx
--- sources/deeptree/src/Slice.jsx	2019-03-03 12:27:19.000000000 +0900
+++ sources/deeptree-useReduxState/src/Slice.jsx	2019-04-01 23:36:28.000000000 +0900
@@ -1,43 +1,28 @@
-import React, { Component } from "react";
-import { connect } from "react-redux";
+import React from "react";
+import { useReduxState } from "reactive-react-redux";
 
-const mapStateToProps = (state, props) => {
-  return {
-    value: state[props.idx]
-  };
-};
-
-const Counter = ({ value }) => {
+const Counter = props => {
+  const state = useReduxState();
+  const value = state[props.idx];
   return <div>Value: {value}</div>;
 };
 
-const ConnectedCounter = connect(mapStateToProps)(Counter);
-
-class Slice extends Component {
-  state = {};
-
-  componentDidMount = () => {
-    //this.props.fillPairs(this.props.idx);
-  };
+const Slice = props => {
+  const { remainingDepth, idx } = props;
 
-  render() {
-    const { remainingDepth, idx } = this.props;
-
-    if (remainingDepth > 0) {
-      return (
+  if (remainingDepth > 0) {
+    return (
+      <div>
+        {idx}.{remainingDepth}
         <div>
-          {idx}.{remainingDepth}
-          <div>
-            <Slice idx={idx} remainingDepth={remainingDepth - 1} />
-          </div>
+          <Slice idx={idx} remainingDepth={remainingDepth - 1} />
         </div>
-      );
-    }
-
-    return <ConnectedCounter idx={idx} />;
+      </div>
+    );
   }
-}
+
+  return <Counter idx={idx} />;
+};
 Slice.displayName = "Slice";
 
 export default Slice;
-//export default connect(mapStateToProps, actions)(Slice);
diff -ur sources/deeptree/src/index.js sources/deeptree-useReduxState/src/index.js
--- sources/deeptree/src/index.js	2019-03-03 12:27:19.000000000 +0900
+++ sources/deeptree-useReduxState/src/index.js	2019-04-01 23:36:28.000000000 +0900
@@ -7,7 +7,7 @@
 import * as c from "./constants";
 import { initialize, incrementRandomCounter, incrementMany } from "./counters";
 
-import { Provider } from "react-redux";
+import { ReduxProvider as Provider } from "reactive-react-redux";
 
 import configureStore from "./configureStore";
 
