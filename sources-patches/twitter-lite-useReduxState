diff -ur sources/twitter-lite/config-overrides.js sources/twitter-lite-useReduxState/config-overrides.js
--- sources/twitter-lite/config-overrides.js	2019-02-20 15:27:17.000000000 +0900
+++ sources/twitter-lite-useReduxState/config-overrides.js	2019-04-01 23:36:28.000000000 +0900
@@ -7,10 +7,9 @@
             "react" : "React",
             "redux" : "Redux",
             "react-dom" : "ReactDOM",
-            "react-redux" : "ReactRedux",
         }
     }
 
 
     return config;
-}
\ No newline at end of file
+}
diff -ur sources/twitter-lite/package.json sources/twitter-lite-useReduxState/package.json
--- sources/twitter-lite/package.json	2019-02-20 15:27:17.000000000 +0900
+++ sources/twitter-lite-useReduxState/package.json	2019-04-01 23:36:28.000000000 +0900
@@ -6,7 +6,7 @@
     "fps-emit": "file:../../fps-emit",
     "react": "^16.6.0",
     "react-dom": "^16.6.0",
-    "react-redux": "^5.0.7",
+    "reactive-react-redux": "^2.0.1",
     "react-scripts": "2.0.3",
     "redux": "^4.0.0",
     "reselect": "^3.0.1"
diff -ur sources/twitter-lite/public/index.html sources/twitter-lite-useReduxState/public/index.html
--- sources/twitter-lite/public/index.html	2019-02-20 15:27:17.000000000 +0900
+++ sources/twitter-lite-useReduxState/public/index.html	2019-04-01 23:28:07.000000000 +0900
@@ -24,7 +24,6 @@
     <script type="text/javascript" src="redux.min.js"></script>
     <script type="text/javascript" src="react.production.min.js"></script>
     <script type="text/javascript" src="react-dom.production.min.js"></script>
-    <script type="text/javascript" src="react-redux.min.js"></script>
   </head>
   <body>
     <noscript>
diff -ur sources/twitter-lite/src/App.js sources/twitter-lite-useReduxState/src/App.js
--- sources/twitter-lite/src/App.js	2019-03-03 12:27:19.000000000 +0900
+++ sources/twitter-lite-useReduxState/src/App.js	2019-04-01 23:36:28.000000000 +0900
@@ -1,26 +1,22 @@
-import React, { Component } from "react";
+import React from "react";
 import "./App.css";
-import { connect } from "react-redux";
+import { useReduxState } from "reactive-react-redux";
 import Slice from "./Slice";
 
-const mapState = state => ({
-  slices: Array(Object.keys(state).length).fill(0)
-});
+const App = () => {
+  const state = useReduxState();
+  const slices = Array(Object.keys(state).length).fill(0);
+  return (
+    <div className="row">
+      {slices.map((slice, idx) => {
+        return (
+          <div className="col-lg-4" key={idx}>
+            <Slice idx={idx} />
+          </div>
+        );
+      })}
+    </div>
+  );
+};
 
-class App extends Component {
-  render() {
-    return (
-      <div className="row">
-        {this.props.slices.map((slice, idx) => {
-          return (
-            <div className="col-lg-4" key={idx}>
-              <Slice idx={idx} />
-            </div>
-          );
-        })}
-      </div>
-    );
-  }
-}
-
-export default connect(mapState)(App);
+export default App;
diff -ur sources/twitter-lite/src/Slice.jsx sources/twitter-lite-useReduxState/src/Slice.jsx
--- sources/twitter-lite/src/Slice.jsx	2019-03-03 12:27:19.000000000 +0900
+++ sources/twitter-lite-useReduxState/src/Slice.jsx	2019-04-01 23:36:28.000000000 +0900
@@ -1,31 +1,18 @@
-import React, { Component } from "react";
-import { connect } from "react-redux";
+import React from "react";
+import { useReduxState } from "reactive-react-redux";
 
 import TwitterLite from "./TwitterLite";
 
-const mapStateToProps = (state, props) => {
-  return {
-    slice: state[props.idx]
-  };
-};
+const Slice = React.memo(({ idx }) => {
+  const state = useReduxState();
+  const slice = state[idx];
+  return (
+    <ul className="list-group">
+      {slice.map(tweet => {
+        return <TwitterLite sliceId={idx} tweet={tweet} />;
+      })}
+    </ul>
+  );
+});
 
-class Slice extends Component {
-  state = {};
-
-  // componentDidMount = () => {
-  //     this.props.fillPairs(this.props.idx);
-  // }
-
-  render() {
-    const { slice, idx } = this.props;
-    return (
-      <ul className="list-group">
-        {slice.map(tweet => {
-          return <TwitterLite sliceId={idx} tweet={tweet} />;
-        })}
-      </ul>
-    );
-  }
-}
-
-export default connect(mapStateToProps)(Slice);
+export default Slice;
diff -ur sources/twitter-lite/src/TwitterLite.js sources/twitter-lite-useReduxState/src/TwitterLite.js
--- sources/twitter-lite/src/TwitterLite.js	2019-03-27 20:38:57.000000000 +0900
+++ sources/twitter-lite-useReduxState/src/TwitterLite.js	2019-04-01 23:36:28.000000000 +0900
@@ -1,6 +1,6 @@
-import { connect } from "react-redux";
+import { useReduxState, useReduxDispatch } from "reactive-react-redux";
 import { createSelector } from "reselect";
-import React, { Component } from "react";
+import React from "react";
 
 const exampleMapStateToProps = createSelector(
   (state, props) => "foobar",
@@ -10,36 +10,28 @@
 const foobar = () => {};
 const exampleMapDispatchToProps = { foobar };
 
-class Internal extends Component {
-  render() {
-    return <div>barfoo</div>;
-  }
-}
-
-class InternalContainer extends Component {
-  render() {
-    return <Internal />;
-  }
-}
-
-const InternalContainerConnected = connect(
-  exampleMapStateToProps,
-  exampleMapDispatchToProps
-)(InternalContainer);
-
-class Example extends Component {
-  render() {
-    return <InternalContainerConnected />;
-  }
-}
-
-class ExampleContainer extends Component {
-  render() {
-    return <Example />;
-  }
-}
-
-export default connect(
-  exampleMapStateToProps,
-  exampleMapDispatchToProps
-)(ExampleContainer);
+const Internal = () => {
+  return <div>barfoo</div>;
+};
+
+const InternalContainer = React.memo((props) => {
+  const state = useReduxState();
+  const dispatch = useReduxDispatch();
+  const { foo } = exampleMapStateToProps(state, props);
+  const actionFoobar = () => dispatch(foobar());
+  return <Internal />;
+});
+
+const Example = () => {
+  return <InternalContainer />;
+};
+
+const ExampleContainer = React.memo((props) => {
+  const state = useReduxState();
+  const dispatch = useReduxDispatch();
+  const { foo } = exampleMapStateToProps(state, props);
+  const actionFoobar = () => dispatch(foobar());
+  return <Example />;
+});
+
+export default ExampleContainer;
diff -ur sources/twitter-lite/src/index.js sources/twitter-lite-useReduxState/src/index.js
--- sources/twitter-lite/src/index.js	2019-03-27 20:38:57.000000000 +0900
+++ sources/twitter-lite-useReduxState/src/index.js	2019-04-01 23:36:28.000000000 +0900
@@ -3,7 +3,7 @@
 import "./index.css";
 import "fps-emit";
 import { createStore, combineReducers } from "redux";
-import { Provider } from "react-redux";
+import { ReduxProvider as Provider } from "reactive-react-redux";
 import App from "./App";
 
 import { addTweet } from "./actions";
